user  nginx;
worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    upstream backend {
        server backend:5000;
    }
    upstream frontend {
        server frontend:8080;
    }

    server {
        listen       80;
        server_name  _;

        # Redirection HTTP vers HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen              443 ssl http2;
        server_name         _;

        # Emplacements des certificats
        ssl_certificate     /etc/ssl/certs/cert.pem;
        ssl_certificate_key /etc/ssl/certs/key.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        # API
        location /api/ {
            proxy_pass          http://backend;
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;
        }

        # WebSockets Socket.IO
        location /socket.io/ {
            proxy_pass          http://backend/socket.io/;
            proxy_http_version  1.1;
            proxy_set_header    Upgrade $http_upgrade;
            proxy_set_header    Connection "Upgrade";
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;
        }

        # Frontend
        location / {
            proxy_pass          http://frontend;
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;
        }
    }
} 